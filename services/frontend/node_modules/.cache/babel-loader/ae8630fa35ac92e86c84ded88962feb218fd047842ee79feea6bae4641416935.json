{"ast":null,"code":"var _jsxFileName = \"/Users/talaatmagdyx/Documents/private_work/notify_postgres/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [engagements, setEngagements] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [newMessage, setNewMessage] = useState('');\n  const [selectedChannel, setSelectedChannel] = useState('whatsapp');\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io('http://localhost:5001');\n    setSocket(newSocket);\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setIsConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n    newSocket.on('interaction_change', data => {\n      console.log('Interaction change:', data);\n      addNotification('interaction_change', data);\n\n      // Refresh engagements list\n      fetchEngagements();\n    });\n    newSocket.on('status_change', data => {\n      console.log('Status change:', data);\n      addNotification('status_change', data);\n\n      // Update engagement in list\n      setEngagements(prev => prev.map(engagement => engagement.id === data.interaction_id ? {\n        ...engagement,\n        status: data.new_status\n      } : engagement));\n    });\n\n    // Fetch initial engagements\n    fetchEngagements();\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const fetchEngagements = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/engagements');\n      const data = await response.json();\n      setEngagements(data);\n    } catch (error) {\n      console.error('Error fetching engagements:', error);\n    }\n  };\n  const addNotification = (type, data) => {\n    const notification = {\n      type,\n      data,\n      timestamp: new Date()\n    };\n    setNotifications(prev => [notification, ...prev.slice(0, 9)]); // Keep last 10 notifications\n  };\n  const createEngagement = async () => {\n    if (!newMessage.trim()) return;\n    try {\n      const response = await fetch('http://localhost:5001/api/engagements', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          channel: selectedChannel,\n          user_identifier: '+1234567890',\n          text: newMessage,\n          frontend_json: {\n            message_type: 'text',\n            sender_name: 'Test User'\n          }\n        })\n      });\n      if (response.ok) {\n        setNewMessage('');\n        fetchEngagements();\n      }\n    } catch (error) {\n      console.error('Error creating engagement:', error);\n    }\n  };\n  const updateStatus = async (id, status) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/engagements/${id}/status`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status\n        })\n      });\n      if (response.ok) {\n        fetchEngagements();\n      }\n    } catch (error) {\n      console.error('Error updating status:', error);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'new':\n        return '#4CAF50';\n      case 'in_progress':\n        return '#FF9800';\n      case 'resolved':\n        return '#2196F3';\n      case 'closed':\n        return '#9E9E9E';\n      default:\n        return '#666';\n    }\n  };\n  const getChannelIcon = channel => {\n    switch (channel) {\n      case 'whatsapp':\n        return '📱';\n      case 'twitter':\n        return '🐦';\n      case 'facebook':\n        return '📘';\n      case 'email':\n        return '📧';\n      default:\n        return '💬';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDCF1 Engagement Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `connection-status ${isConnected ? 'connected' : 'disconnected'}`,\n        children: isConnected ? '🟢 Connected' : '🔴 Disconnected'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recent Engagements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"engagements-list\",\n          children: engagements.map(engagement => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"engagement-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"engagement-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"channel-icon\",\n                children: getChannelIcon(engagement.channel)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"user\",\n                children: engagement.user_identifier\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-badge\",\n                style: {\n                  backgroundColor: getStatusColor(engagement.status)\n                },\n                children: engagement.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"engagement-text\",\n              children: engagement.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"engagement-time\",\n              children: new Date(engagement.created_at).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"engagement-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => updateStatus(engagement.id, 'in_progress'),\n                className: \"btn btn-orange\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => updateStatus(engagement.id, 'resolved'),\n                className: \"btn btn-blue\",\n                children: \"Resolve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)]\n          }, engagement.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDD14 Live Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notifications-list\",\n          children: notifications.map((notification, index) => {\n            var _notification$data$te;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"notification-type\",\n                  children: notification.type === 'interaction_change' ? '🔔' : '📊'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"notification-time\",\n                  children: notification.timestamp.toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-content\",\n                children: notification.type === 'interaction_change' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: notification.data.operation\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, this), \" - \", notification.data.channel, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this), \"User: \", notification.data.user_identifier, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this), \"Text: \", (_notification$data$te = notification.data.text) === null || _notification$data$te === void 0 ? void 0 : _notification$data$te.substring(0, 50), \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Status Change: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: notification.data.old_status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 38\n                  }, this), \" \\u2192 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: notification.data.new_status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 88\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this), \"ID: \", notification.data.interaction_id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedChannel,\n          onChange: e => setSelectedChannel(e.target.value),\n          className: \"channel-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"whatsapp\",\n            children: \"\\uD83D\\uDCF1 WhatsApp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"twitter\",\n            children: \"\\uD83D\\uDC26 Twitter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"facebook\",\n            children: \"\\uD83D\\uDCD8 Facebook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"email\",\n            children: \"\\uD83D\\uDCE7 Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type a message...\",\n          className: \"message-input\",\n          onKeyPress: e => e.key === 'Enter' && createEngagement()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createEngagement,\n          className: \"send-btn\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"d2V3+dN9lGHZZR0wX/9jCktUCGA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","App","_s","engagements","setEngagements","notifications","setNotifications","socket","setSocket","isConnected","setIsConnected","newMessage","setNewMessage","selectedChannel","setSelectedChannel","newSocket","on","console","log","data","addNotification","fetchEngagements","prev","map","engagement","id","interaction_id","status","new_status","close","response","fetch","json","error","type","notification","timestamp","Date","slice","createEngagement","trim","method","headers","body","JSON","stringify","channel","user_identifier","text","frontend_json","message_type","sender_name","ok","updateStatus","getStatusColor","getChannelIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","created_at","toLocaleString","onClick","index","_notification$data$te","toLocaleTimeString","operation","substring","old_status","value","onChange","e","target","placeholder","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/talaatmagdyx/Documents/private_work/notify_postgres/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\ninterface Engagement {\n  id: number;\n  channel: string;\n  user_identifier: string;\n  status: string;\n  created_at: string;\n  text: string;\n  engagement_id: string;\n}\n\ninterface Notification {\n  type: 'interaction_change' | 'status_change';\n  data: any;\n  timestamp: Date;\n}\n\nconst App: React.FC = () => {\n  const [engagements, setEngagements] = useState<Engagement[]>([]);\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [socket, setSocket] = useState<any>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [newMessage, setNewMessage] = useState('');\n  const [selectedChannel, setSelectedChannel] = useState('whatsapp');\n\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io('http://localhost:5001');\n    setSocket(newSocket);\n\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setIsConnected(true);\n    });\n\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n\n    newSocket.on('interaction_change', (data: any) => {\n      console.log('Interaction change:', data);\n      addNotification('interaction_change', data);\n      \n      // Refresh engagements list\n      fetchEngagements();\n    });\n\n    newSocket.on('status_change', (data: any) => {\n      console.log('Status change:', data);\n      addNotification('status_change', data);\n      \n      // Update engagement in list\n      setEngagements(prev => \n        prev.map(engagement => \n          engagement.id === data.interaction_id \n            ? { ...engagement, status: data.new_status }\n            : engagement\n        )\n      );\n    });\n\n    // Fetch initial engagements\n    fetchEngagements();\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  const fetchEngagements = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/engagements');\n      const data = await response.json();\n      setEngagements(data);\n    } catch (error) {\n      console.error('Error fetching engagements:', error);\n    }\n  };\n\n  const addNotification = (type: 'interaction_change' | 'status_change', data: any) => {\n    const notification: Notification = {\n      type,\n      data,\n      timestamp: new Date()\n    };\n    \n    setNotifications(prev => [notification, ...prev.slice(0, 9)]); // Keep last 10 notifications\n  };\n\n  const createEngagement = async () => {\n    if (!newMessage.trim()) return;\n\n    try {\n      const response = await fetch('http://localhost:5001/api/engagements', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          channel: selectedChannel,\n          user_identifier: '+1234567890',\n          text: newMessage,\n          frontend_json: {\n            message_type: 'text',\n            sender_name: 'Test User'\n          }\n        }),\n      });\n\n      if (response.ok) {\n        setNewMessage('');\n        fetchEngagements();\n      }\n    } catch (error) {\n      console.error('Error creating engagement:', error);\n    }\n  };\n\n  const updateStatus = async (id: number, status: string) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/engagements/${id}/status`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ status }),\n      });\n\n      if (response.ok) {\n        fetchEngagements();\n      }\n    } catch (error) {\n      console.error('Error updating status:', error);\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'new': return '#4CAF50';\n      case 'in_progress': return '#FF9800';\n      case 'resolved': return '#2196F3';\n      case 'closed': return '#9E9E9E';\n      default: return '#666';\n    }\n  };\n\n  const getChannelIcon = (channel: string) => {\n    switch (channel) {\n      case 'whatsapp': return '📱';\n      case 'twitter': return '🐦';\n      case 'facebook': return '📘';\n      case 'email': return '📧';\n      default: return '💬';\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {/* Header */}\n      <div className=\"header\">\n        <h1>📱 Engagement Dashboard</h1>\n        <div className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\n          {isConnected ? '🟢 Connected' : '🔴 Disconnected'}\n        </div>\n      </div>\n\n      <div className=\"main-content\">\n        {/* Left Sidebar - Engagements List */}\n        <div className=\"sidebar\">\n          <h2>Recent Engagements</h2>\n          <div className=\"engagements-list\">\n            {engagements.map((engagement) => (\n              <div key={engagement.id} className=\"engagement-item\">\n                <div className=\"engagement-header\">\n                  <span className=\"channel-icon\">\n                    {getChannelIcon(engagement.channel)}\n                  </span>\n                  <span className=\"user\">{engagement.user_identifier}</span>\n                  <span \n                    className=\"status-badge\"\n                    style={{ backgroundColor: getStatusColor(engagement.status) }}\n                  >\n                    {engagement.status}\n                  </span>\n                </div>\n                <div className=\"engagement-text\">{engagement.text}</div>\n                <div className=\"engagement-time\">\n                  {new Date(engagement.created_at).toLocaleString()}\n                </div>\n                <div className=\"engagement-actions\">\n                  <button \n                    onClick={() => updateStatus(engagement.id, 'in_progress')}\n                    className=\"btn btn-orange\"\n                  >\n                    In Progress\n                  </button>\n                  <button \n                    onClick={() => updateStatus(engagement.id, 'resolved')}\n                    className=\"btn btn-blue\"\n                  >\n                    Resolve\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Right Sidebar - Notifications */}\n        <div className=\"notifications-sidebar\">\n          <h2>🔔 Live Notifications</h2>\n          <div className=\"notifications-list\">\n            {notifications.map((notification, index) => (\n              <div key={index} className=\"notification-item\">\n                <div className=\"notification-header\">\n                  <span className=\"notification-type\">\n                    {notification.type === 'interaction_change' ? '🔔' : '📊'}\n                  </span>\n                  <span className=\"notification-time\">\n                    {notification.timestamp.toLocaleTimeString()}\n                  </span>\n                </div>\n                <div className=\"notification-content\">\n                  {notification.type === 'interaction_change' ? (\n                    <div>\n                      <strong>{notification.data.operation}</strong> - {notification.data.channel}\n                      <br />\n                      User: {notification.data.user_identifier}\n                      <br />\n                      Text: {notification.data.text?.substring(0, 50)}...\n                    </div>\n                  ) : (\n                    <div>\n                      Status Change: <strong>{notification.data.old_status}</strong> → <strong>{notification.data.new_status}</strong>\n                      <br />\n                      ID: {notification.data.interaction_id}\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Bottom Input */}\n      <div className=\"input-section\">\n        <div className=\"input-group\">\n          <select \n            value={selectedChannel} \n            onChange={(e) => setSelectedChannel(e.target.value)}\n            className=\"channel-select\"\n          >\n            <option value=\"whatsapp\">📱 WhatsApp</option>\n            <option value=\"twitter\">🐦 Twitter</option>\n            <option value=\"facebook\">📘 Facebook</option>\n            <option value=\"email\">📧 Email</option>\n          </select>\n          <input\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n            placeholder=\"Type a message...\"\n            className=\"message-input\"\n            onKeyPress={(e) => e.key === 'Enter' && createEngagement()}\n          />\n          <button onClick={createEngagement} className=\"send-btn\">\n            Send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}